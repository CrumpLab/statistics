sd(x)*sqrt(50)
n
#
n <- c(2,6,20,50)#
ss <- 1000#
#
addNormal <- function(m,s,lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=4)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=4)#
	addNormal(1, 1/sqrt(n[i]))#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i]))#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
d
plot(d)
#
n <- c(2,6,20,50)#
ss <- 1000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=4)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=4)#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), '')#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i]))#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
sqrt(n)
1/sqrt(n)
#
n <- c(2,6,20,50)#
ss <- 1000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=4)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=4)#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i]))#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 1000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=4)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=4)#
	addNormal(1, 1/sqrt(n[i]))#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
addNormal
addNormal(1, 1/sqrt(50))
addNormal(1, 1/sqrt(100))
addNormal(1, 1/sqrt(10))
addNormal(1, 1/sqrt(20))
plot(d)
addNormal(1, 1/sqrt(20))
addNormal(1, 1/sqrt(40))
addNormal(1, 1/sqrt(30))
addNormal(1, 1/sqrt(28))
addNormal(1, 1/sqrt(27))
plot(d)
addNormal(1, 1/sqrt(27))
points(1,1)
#
n <- c(2,6,20,50)#
ss <- 1000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=4)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=2)#
	addNormal(1, 1/sqrt(n[i]))#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 10000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=4)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=2)#
	addNormal(1, 1/sqrt(n[i]))#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 8000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
	d <- density(x, adjust=1.7)#
	R <- range(c(0, d$y))*1.1#
	plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=1.7)#
	addNormal(1, 1/sqrt(n[i]))#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 8000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	if(n[i] != 2){#
		x <- c()#
		for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
		d <- density(x, adjust=1.7)#
		R <- range(c(0, d$y))*1.1#
		plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
		abline(h=0)#
		axis(1, at=at[[i]])#
	} else {#
		X <- c(-3, 1-sqrt(3), 1, 1+sqrt(3), 5)#
		Y <- c(0, 0, 1/(2*sqrt(3)))#
		plot(X, Y, axes=FALSE, type='l', xlab='', ylab='')#
		axis(1, at=at[[i]])#
	}#
	addNormal(1, 1/sqrt(n[i]))#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=1.7)#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 8000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	if(n[i] != 2){#
		x <- c()#
		for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
		d <- density(x, adjust=1.7)#
		R <- range(c(0, d$y))*1.1#
		plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
		abline(h=0)#
		axis(1, at=at[[i]])#
	} else {#
		X <- c(-3, 1-sqrt(3), 1, 1+sqrt(3), 5)#
		Y <- c(0, 0, 1/(2*sqrt(3)), 0, 0)#
		plot(X, Y, axes=FALSE, type='l', xlab='', ylab='')#
		axis(1, at=at[[i]])#
	}#
	addNormal(1, 1/sqrt(n[i]))#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=1.7)#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 2000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	if(n[i] != 2){#
		x <- c()#
		for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
		d <- density(x, adjust=1.7)#
		R <- range(c(0, d$y))*1.1#
		plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
		abline(h=0)#
		axis(1, at=at[[i]])#
	} else {#
		X <- c(-3, 1-sqrt(3), 1, 1+sqrt(3), 5)#
		Y <- c(0, 0, 1/sqrt(3), 0, 0)#
		plot(X, Y, axes=FALSE, type='l', xlab='', ylab='')#
		axis(1, at=at[[i]])#
	}#
	addNormal(1, 1/sqrt(n[i]))#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=1.7)#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,20,50)#
ss <- 10000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.4, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	if(n[i] != 2){#
		x <- c()#
		for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
		d <- density(x, adjust=1.4)#
		R <- range(c(0, d$y))*1.1#
		plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
		abline(h=0)#
		axis(1, at=at[[i]])#
	} else {#
		X <- c(-3, 1-sqrt(3), 1, 1+sqrt(3), 5)#
		Y <- c(0, 0, 1/sqrt(3), 0, 0)#
		plot(X, Y, axes=FALSE, type='l', xlab='', ylab='')#
		axis(1, at=at[[i]])#
	}#
	addNormal(1, 1/sqrt(n[i]))#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=1.4)#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
n <- c(2,6,15,50)#
ss <- 10000#
#
addNormal <- function(m, s, lty=2,col=2, ...){#
	X <- seq(m-5*s, m+5*s, s/9.8)#
	Y <- dnorm(X, m, s)#
	lines(X, Y, lty=lty, col=col, ...)#
}#
#
pdf('cltSimulations.pdf', 5.6, 8)#
#
layout(matrix(1:15, 5, byrow=TRUE), widths=c(1.1,2,2), heights=c(2,2,2,2,2))#
#
par(mar=rep(0,4), mgp=c(4, 0.7, 0))#
#
#===> create the originals <===##
X <- sort(c(-2, 1-sqrt(3)-0.001, 1-sqrt(3)+0.001, -0.00001, 0, 0.00001, seq(0.05, 6, 0.08)))#
Yu <- dunif(X, 1-sqrt(3), 1+sqrt(3))#
Ye <- dexp(X)#
plot(0:1, 0:1, axes=FALSE, type='n')#
text(0.5, 0.47, 'original\ndistributions', cex=1.7)#
par(mar=c(3, 1, 1, 1))#
plot(X, Yu, type='s', xlab='', ylab='', xlim=c(-2, 5), ylim=c(0, 0.6), axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
plot(X, Ye, type='l', xlab='', ylab='', xlim=c(-2, 5), ylim=0:1, axes=FALSE)#
axis(1, at=seq(-2, 4, 2))#
abline(h=0)#
#
#===> create loop for plots <===##
set.seed(50)#
#
at <- list()#
at[[1]] <- seq(-2,4,2)#
at[[2]] <- -1:3#
at[[3]] <- 0:2#
at[[4]] <- seq(0.5, 1.5, 0.5)#
for(i in 1:length(n)){#
	plot(0:1, 0:1, axes=FALSE, type='n')#
	text(0.5, 0.3, paste('n =', n[i]), cex=1.7)#
	xlim <- 1+5*c(-1,1)/sqrt(n[i])#
	if(n[i] != 2){#
		x <- c()#
		for(j in 1:ss) x[j] <- mean(runif(n[i],1-sqrt(3),1+sqrt(3)))#
		d <- density(x, adjust=1.4)#
		R <- range(c(0, d$y))*1.1#
		plot(d, main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
		abline(h=0)#
		axis(1, at=at[[i]])#
	} else {#
		X <- c(-3, 1-sqrt(3), 1, 1+sqrt(3), 5)#
		Y <- c(0, 0, 1/sqrt(3), 0, 0)#
		plot(X, Y, axes=FALSE, type='l', xlab='', ylab='')#
		axis(1, at=at[[i]])#
	}#
	addNormal(1, 1/sqrt(n[i]))#
	x <- c()#
	for(j in 1:ss) x[j] <- mean(rexp(n[i]))#
	d <- density(x, adjust=1.4)#
	R <- range(c(0, d$y))*1.1#
	plot(d$x, d$y, type='l', main='', xlab='', ylab='', axes=FALSE, xlim=xlim, ylim=R)#
	abline(h=0)#
	axis(1, at=at[[i]])#
	addNormal(1, 1/sqrt(n[i])); cat(1/sqrt(n[i]), sd(x), '')#
	cat(n[i], '\n')#
}#
#x <- c()#
#for(i in 1:5000)	x[i] <- mean(rexp(20, 1))#
#density(x)#
#hist(x)#
#
#
dev.off()#
#
#
#
#x <- rpareto(10000, 1+sqrt(2), sqrt(2)/(1+sqrt(2)))
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=round(7+.17*(-3:3),2), cex.axis=0.7)#
these <- which(X*0.17 + 7 <= 7.42 & X*0.17 + 7 >= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 <= 7.42 & X*0.17 + 7 >= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 <= 7.42 & X*0.17 + 7 >= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42 & X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42 | X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#00000000')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#00000000')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)
#
pdf('pValueTwoSidedSleepStudy.pdf', 4, 3)#
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 2, 1)#
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 2.5, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.7)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.5,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=-3:3, label=format(round(7+.17*(-3:3),2)), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu_0*' = 7', 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu[0]*' = 7', 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.42)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.58)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu[0]*' = 7', 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.4)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.6)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu[0]*' = 7', 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu=mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-1.8,0.13, -1.8, 0.03, length=0.07)#
text(-1.8, 0.15, '5%', cex=0.8)#
text(1.8, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.13, -2, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
text(1.8, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.13, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
text(1.8, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu[0]*' = 7', 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.4)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, .4/.17, 5), label=expression(0, mu[0]*' = 7', 7.42, 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.4)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, mu[0]*' = 7', 7.42, 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.4)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, mu[0]*' = 7', 7.42, 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 3.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, mu[0]*' = 7', 7.42, 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 100#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval')#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2)#
	lines(ci, rep(i, 2))#
}#
#
#
#
dev.off()
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 100#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval')#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2)#
	lines(ci, rep(i, 2))#
}#
#
#
#
dev.off()
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2)#
	lines(ci, rep(i, 2))#
}#
#
#
#
dev.off()
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(50)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(51)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/20, 21*k/20)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 2, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 4.3*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
mtext('confidence interval', 2, 0.7)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 5*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 21*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 50#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 4, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='confidence interval', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.3, col=col)#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
	} else {#
		col <- 1#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF00000088', lwd=3)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=3)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	ci <- x + 1.96*c(-1,1)*SE#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=3)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000055', lwd=4)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=6)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000066', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col='#FF000066')#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000066', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 93.65#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(-k/40, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 4, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 7, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(4, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'))#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.3)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- 2#
		points(x, i, cex=1.4, col=col)#
		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col='#FF000088', lwd=5)#
	} else {#
		col <- 1#
		points(x, i, pch=20, cex=1.2, col=col)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
pdf('pValueTwoSidedSleepStudy.pdf', 3.5, 2.3)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu[0]*' = 7', 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.36)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X*0.17 + 7 <= 6.64)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('type1ErrorDoublingExampleFigure.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 5), label=expression(0, mu*' = '*mu[0], 0), cex.axis=0.9)#
these <- which(X >= 1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -1.65)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '5%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '5%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
pf(.975, 100000, 49)
qf(.975, 100000, 49)
qf(.025, 100000, 49)
qf(.025, 49, 100000)
qf(.025, 49, 1000000000000)
temp <- c()
for(i in 1:1000){ temp[i] <- sd(rnorm(50)) }
hist(temp)
for(i in 1:1000){ temp[i] <- sd(rnorm(30)) }
hist(temp)
hist(temp); quantile(temp, c(0.025, 0.975))
qqnorm(temp)
library(openintro)
data(run10)
set.seed(1); temp <- sample(14974, 100); run10Samp1 <- run10[temp,c(2,3,5,6,10)];
run10
run10Samp1
run10Samp1$runTime[run10Samp1$gender == 'M']
run10Samp1$runTime[run10Samp1$sex == 'M']
run10Samp1[runTime[run10Samp1[,sex] == 'M'],]
run10Samp1[run10Samp1[,sex] == 'M'], 'runTime']
run10Samp1[run10Samp1[,'sex'] == 'M'], 'runTime']
run10Samp1[run10Samp1[,'sex'] == 'M', 'runTime']
run10Samp1[run10Samp1[,'gender'] == 'M', 'runTime']
run10Samp1[run10Samp1[,'gender'] == 'M', ]
run10Samp1[run10Samp1[,'gender'] == 'M', 'netTime']
mean(run10Samp1[run10Samp1[,'gender'] == 'M', 'netTime'])
mean(run10Samp1[run10Samp1[,'gender'] == 'W', 'netTime'])
(run10Samp1[run10Samp1[,'gender'] == 'W', 'netTime'])
mean(run10Samp1[run10Samp1[,'gender'] == 'F', 'netTime'])
tF <- (run10Samp1[run10Samp1[,'gender'] == 'F', 'netTime'])
tM <- (run10Samp1[run10Samp1[,'gender'] == 'M', 'netTime'])
sqrt(var(tF)/52 + var(tM)/48)
96.92 + c(-1,1)*1.96, 3.053
96.92 + c(-1,1)*1.96*3.053
6.82 + c(-1,1)*1.96*3.053
6.82 + c(-1,1)*1.96*3.05
qnorm(.01)
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.3, 0, 2.3)), cex.axis=0.9)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2,0.12, -1.9, 0.03, length=0.07)#
text(-2, 0.15, '1%', cex=0.8)#
arrows(2,0.12, 1.9, 0.03, length=0.07)#
text(2, 0.15, '1%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.3, 0, 2.3)), cex.axis=0.9)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=0.8)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.3, 0, 2.3)), cex.axis=0.9)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=0.8)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=0.8)#
text(0, 0.2, '98%', cex=1.1)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.3, 0, 2.3)), cex.axis=0.9)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=0.8)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=0.8)#
text(0, 0.2, '98% in the\nmiddle', cex=1.1)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.3, 0, 2.3)), cex.axis=0.9)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=0.8)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=0.8)#
text(0, 0.15, '98% in the\nmiddle', cex=1.1)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
qnorm(.01)
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.33, 0, 2.33)), cex.axis=0.9)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=0.8)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=0.8)#
text(0, 0.15, '98% in the\nmiddle', cex=1.1)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.33, 0, 2.33)), cex.axis=1.1)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=1)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=1)#
text(0, 0.15, '98% in the\nmiddle', cex=1.2)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.33, 0, 2.33)), cex.axis=1.1)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.15, '1%', cex=1.2)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.15, '1%', cex=1.2)#
text(0, 0.15, '98% in the\nmiddle', cex=1.2)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('findingZFor98Confidence.pdf', 3.5, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.5,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-2.3, 0, 2.3), format(c(-2.33, 0, 2.33)), cex.axis=1.1)#
these <- which(X >= 2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X <= -2.3)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
arrows(-2.6,0.12, -2.5, 0.03, length=0.07)#
text(-2.6, 0.17, '1%', cex=1.2)#
arrows(2.6,0.12, 2.5, 0.03, length=0.07)#
text(2.6, 0.17, '1%', cex=1.2)#
text(0, 0.15, '98% in the\nmiddle', cex=1.2)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
6.82 + c(-1,1)*2.33*3.05
tM <- (run10Samp1[run10Samp1[,'gender'] == 'M', 'netTime'])
sqrt(var(tF)/52 + var(tM)/48)
tM <- (run10Samp1[run10Samp1[,'gender'] == 'M', 'age'])
tF <- (run10Samp1[run10Samp1[,'gender'] == 'F', 'age'])
sqrt(var(tF)/52 + var(tM)/48)
mean(tM)
mean(tF)
2.64 + c(-1,1)*1.96*2.2
41/733
60/742
101 / (733 + 742)
101 / (733 + 742) -> pc
sqrt((1/733 + 1/742)*pc*(1-pc))
sqrt((1/733 + 1/742)*pc*(1-pc))
25/13
pnrom(1.92)
pnorm(1.92)
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 3.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, mu[0]*' = 7', 7.42, 0), cex.axis=0.9)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 3.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, mu[0]*' = 7', 1.92, 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 3.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 1.92, 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 3.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 1.92, 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 3, 2)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 1.92, 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.5, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 1.92, 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.5, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 'Z = 1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.5, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 'Z[] = 1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.5, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*'=0', 'Z=1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.5, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 'Z = 1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.75, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 'Z = 1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.75, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 'Z = 1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.025)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueForSulphDrugStudyInHTSubsection.pdf', 2.75, 1.5)#
#
#===> plot <===##
par(las=1, mar=c(1.8,0,0.5,0), mgp=c(3,0.6,0))#
X <- seq(-4,4,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5, 0, 23/13, 5), label=expression(0, theta[0]*' = 0', 'Z = 1.92', 0), cex.axis=0.9)#
these <- which(X*0.013 >= 0.023)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	col <- 1#
#	points(x, i, pch=20, cex=1.2, col=col)#
	if(abs(x-m) > 1.96*SE){#
		col <- '#FF000088'#
		points(x, i, cex=1.4, col=col)#
#		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col=col, lwd=5)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	col <- 1#
	points(x, i, pch=20, cex=1.2, col=col)#
	if(abs(x-m) > 1.96*SE){#
		col <- '#FF000088'#
		points(x, i, cex=1.4, col=col)#
#		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col=col, lwd=5)#
	}#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- '#FF000088'#
		points(x, i, cex=1.4, col=col)#
#		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col=col, lwd=5)#
	}#
	col <- 1#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- '#FF0000BB'#
		points(x, i, cex=1.4, col=col)#
#		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col=col, lwd=5)#
	}#
	col <- 1#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 30#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- '#FF0000BB'#
		points(x, i, cex=1.4, col=col)#
#		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col=col, lwd=5)#
	}#
	col <- 1#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
#
set.seed(52)#
#
pdf('95PercentConfidenceInterval.pdf', 6, 4)#
#
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))#
m <- 94.26#
s <- 15.66#
n <- 100#
k <- 25#
SE <- s/sqrt(n)#
#
xR <- m + 4*c(-1, 1)*s/sqrt(n)#
yR <- c(0, 41*k/40)#
#
plot(xR, yR, type='n', xlab='run time (minutes)', ylab='', axes=FALSE)#
abline(v=m, lty=2, col='#00000088')#
axis(1, at=m, expression(mu*' = 94.26'), cex.axis=1.15)#
#axis(2)#
for(i in 1:k){#
	x <- rnorm(1, m, SE)#
	ci <- x + 1.96*c(-1,1)*SE#
	if(abs(x-m) > 1.96*SE){#
		col <- '#FF0000BB'#
		points(x, i, cex=1.4, col=col)#
#		points(x, i, pch=20, cex=1.2, col=col)#
		lines(ci, rep(i, 2), col=col, lwd=5)#
	}#
	col <- 1#
	points(x, i, pch=20, cex=1.2, col=col)#
	lines(ci, rep(i, 2), col=col)#
}#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(4,4,1,1), mpg=c(2.7,0.7,1))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE)#
axis(1, at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(4,4,1,1), mgp=c(2.7,0.7,1))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE)#
axis(1, at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(4,4,1,1), mgp=c(2.7,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE)#
axis(1, at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(4,4,1,1), mgp=c(2.7,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(4,1,1,1), mgp=c(2.7,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(4,1,1,1), mgp=c(2.7,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0)#
#
#
#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0)#
yMax <- max(Y)#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0)#
yMax <- max(Y)#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0, col='#00000088')#
yMax <- max(Y)#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
polygon(x, dnorm(x), col='#0000FF33', border='#00000000')#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
polygon(x, dnorm(x), fill='#0000FF33', border='#00000000')#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0000FF33', border='#00000000')#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#00FFFF11', border='#00000000')#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
qnorm(0.005)
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dnorm(X)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=seq(-2.8, 2.8, length.out=7), label=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 5)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dnorm(X[these]), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10)#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/2,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/2), lty=2, col='#00000055')#
text(0, yMax/2, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
?text
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 1.96*c(-1,1,1,1)#
y <- c(1,1,1.3,1.3)*yMax/3 #
polygon(x, y, border='#00000088', col='#00000088')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 1.96*c(-1,1,1,1)#
y <- c(1,1,1.3,1.3,1)*yMax/3 #
polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 1.96*c(-1,1,1,1)#
y <- c(1,1,1.3,1.3,1)*yMax/3 #
polygon(x, y, border='#FFFFFF', col='#FFFFFF')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)
x
y
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 1.96*c(-1,1,1,1)#
y <- c(1,1.3,1.3,1)*yMax/3 #
polygon(x, y, border='#FFFFFF', col='#FFFFFF')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1.3,1.3,1)*yMax/3 #
polygon(x, y, border='#FFFFFF', col='#FFFFFF')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.3,1.3)*yMax/3 #
polygon(x, y, border='#FFFFFF', col='#FFFFFF')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='n', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
lines(X, Y, col='#00000088')#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.7,1,1,1), mgp=c(2.3,0.7,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='n', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
#x <- 1.96*c(-1,1,1,-1)#
#y <- c(1,1,1.45,1.45)*yMax/3 #
#polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
lines(X, Y, col='#00000088')#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.3,1,1,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='n', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
#x <- 1.96*c(-1,1,1,-1)#
#y <- c(1,1,1.45,1.45)*yMax/3 #
#polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
lines(X, Y, col='#00000088')#
#
dev.off()
pdf('choosingZForCI.pdf', 5, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='n', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
#x <- 1.96*c(-1,1,1,-1)#
#y <- c(1,1,1.45,1.45)*yMax/3 #
#polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
lines(X, Y, col='#00000088')#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='n', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
#x <- 1.96*c(-1,1,1,-1)#
#y <- c(1,1,1.45,1.45)*yMax/3 #
#polygon(x, y, border='#FFFFFF88', col='#FFFFFF88')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
lines(X, Y, col='#00000088')#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='n', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1))#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFFAA', col='#FFFFFFAA')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
lines(X, Y, col='#00000088')#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFFAA', col='#FFFFFFAA')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF44', col='#FFFFFF44')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF55')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.35,1.35)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.25,1.25)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.45,1.45)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.2,1.2)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.4,1.4)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.2,1.2)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.4,1.4)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFFFF')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.2,1.2)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF66')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFFFF')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF00')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFFFF')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFFFF')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF77')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF66', col='#FFFFFF77')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77', lwd=3)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77', lwd=5)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77', lwd=10)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.21,1.21)*2*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF77', lwd=10)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF33', col='#FFFFFF77')#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.19,1.19)*2*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF77', lwd=10)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.42,1.42)*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF77', lwd=10)#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.19,1.19)*2*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF77', lwd=10)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
pdf('choosingZForCI.pdf', 5.3, 3)#
par(mar=c(3.3,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-4, 4, 0.025)#
Y <- dt(X, 10) # makes better visual#
plot(X, Y, type='l', xlab='standard deviations from the mean', ylab='', axes=FALSE, xlim=3.3*c(-1,1), col='#00000088')#
axis(1, at=-3:3) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
these <- (X < 1.96 & X > -1.96)#
x <- c(-1.96, X[these], 1.96)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF18', border='#00000000')#
these <- (X < 2.58 & X > -2.58)#
x <- c(-2.58, X[these], 2.58)#
y <- c(0, dt(X[these], 10), 0)#
polygon(x, y, col='#0088FF22', border='#00000000')#
#
x <- 1.96*c(-1,1,1,-1)#
y <- c(1,1,1.38,1.38)*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF77', lwd=7)#
lines(1.96*c(-1,1), rep(yMax/3,2), lwd=2)#
lines(rep(-1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
lines(rep( 1.96,2), c(0,yMax/3), lty=2, col='#00000055')#
text(0, yMax/3, '95%, extends -1.96 to 1.96', pos=3)#
#
x <- 2.58*c(-1,1,1,-1)#
y <- c(1,1,1.19,1.19)*2*yMax/3 #
polygon(x, y, border='#FFFFFF55', col='#FFFFFF77', lwd=7)#
lines(2.58*c(-1,1), rep(2*yMax/3,2), lwd=2)#
lines(rep(-2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
lines(rep( 2.58,2), c(0,2*yMax/3), lty=2, col='#00000055')#
text(0, 2*yMax/3, '99%, extends -2.58 to 2.58', pos=3)#
#
dev.off()
35.22 + 2.58c(-1,1)*1.09
35.22 + 2.58*c(-1,1)*1.09
35.22 + 1.65*c(-1,1)*1.09
qnorm(.05)
