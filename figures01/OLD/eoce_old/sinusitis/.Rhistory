??sleep
library(openintro)
data(mammals)
mammals
50000/8
500*8
150000/12
q()
15*8
120/45
120/40
d = read.csv("/Users/mine/Desktop/Projects/DataFest/Kiva data/new/datafest2012/main files/loans.csv")
names(d)
prop.table(table(d$status, d$location.country),1)
prop.table(table(d$location.country, d$status),1)
prop.table(table(d$location.country, d$status),2)
sum(prop.table(table(d$location.country, d$status),2)[1,])
sum(prop.table(table(d$location.country, d$status),1)[1,])
prop.table(table(d$location.country, d$status),1)
names(loans)
names(d)
table(d$posted_yr)
table(d$location.country)
cat(table(d$location.country))
print(table(d$location.country))
names(table(d$location.country))
table(d$posted_yr)
library(openintro)
?treeDiag
??treeDiag
treeDiag(c("Student", "Parents"), c(0.49, 0.51), list(c(0.57, 0.43), c(0.38, 0.62)), c("uses","not"), c("used","not"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag <- function(main, p1, p2, out1=c('Yes','No'), out2=c('Yes','No'), textwd=0.15, solwd=0.2, SBS=c(TRUE,TRUE), showSol=TRUE, solSub=NULL, digits=4, textadj=0.015, cex.main=1.3, col.main="#999999", showWork=FALSE){#
	#
	#=====> Checks <=====##
	SBS <- rep(SBS, 2)#
	if(length(p1) != length(out1)){#
		stop("p1 and out1 must have the same length")#
	}#
	P1 <- format(p1)#
	P2 <- list()#
	for(i in 1:length(p1)){#
		P2[[i]] <- format(p2[[i]])#
		if(length(p2[[i]]) != length(out2)){#
			stop("Each list item of p2 must have the same length as out2")#
		}#
	}#
	#
	#=====> Prepare Formatting <=====##
	x <- (0.75-2*textwd)/2#
	x <- c(0, x, x+textwd, 2*x+textwd, 2*x+2*textwd+0.05)#
	y1 <- c(.4, -.4)#
	y2 <- c(.21, -.21)#
	n1 <- length(p1)#
	n2 <- length(p2[[1]])#
	if(n1 == 2 && n2 > 2){#
		y2 <- seq(.23, -.23, len=n2)#
	} else if(n1 > 2 && n2 == 2){#
		y1 <- seq(.5, -.5, len=n1)#
	} else if(n1 > 2 && n2 > 2){#
		y1 <- seq(.5, -.5, len=n1)#
		y2 <- seq(.15, -.15, len=n2)#
	}#
	#
	#=====> Basic Plot <=====##
	par(mar=c(0,0,0,0))#
	plot(1,1,type='n', axes=F, ylim=c(-.76,1.03), xlim=c(0,0.8+solwd), xlab='', ylab='')#
	text(mean(x[2:3]), 0.95, main[1], cex=cex.main, col=col.main)#
	text(mean(x[4:5]), 0.95, main[2], cex=cex.main, col=col.main)#
	#
	#=====> Branches <=====##
	for(i in 1:n1){#
		lines(x[1:2], c(0,y1[i]))#
		lines(x[2:3], c(y1[i],y1[i]), lty=2)#
		if(SBS[1]){#
			temp <- paste(out1[i], P1[i], sep=",  ")#
			text(mean(x[2:3]), y1[i]-textadj, temp, pos=3)#
		} else {#
			text(mean(x[2:3]), y1[i], P1[i]+textadj, pos=1)#
			text(mean(x[2:3]), y1[i], out1[i]-textadj, pos=3)#
		}#
		for(j in 1:n2){#
			lines(x[3:4], y1[i]+c(0, y2[j]))#
			lines(x[4:5], y1[i]+c(y2[j], y2[j]), lty=2)#
			if(SBS[2]){#
				temp <- paste(out2[j], P2[[i]][j], sep=",  ")#
				text(mean(x[4:5]), y1[i]+y2[j]-textadj, temp, pos=3)#
			} else {#
				text(mean(x[4:5]), y1[i]+y2[j], P2[[i]][j], pos=1)#
				text(mean(x[4:5]), y1[i]+y2[j], out2[j], pos=3)#
			}#
			if(showSol){#
				sol <- round(p1[i]*p2[[i]][j], digits)#
				if(showWork){#
					temp <- paste(p1[i], p2[[i]][j], sep="*")#
					sol  <- paste(temp, sol, sep=" = ")#
				}#
				if(!is.null(solSub)[1]){#
					sol  <- solSub[[i]][j]#
				}#
				text(x[5], y1[i]+y2[j], sol, pos=4)#
			}#
		}#
	}#
}#
#
# Examples#
# generic with random probabilities#
treeDiag(c('Flight on time?','Luggage on time?'),c(.8,.2),list(c(.97,.03),c(.15,.85)))#
treeDiag(c('Breakfast?','Go to class'),c(.4,.6),list(c(.4,.36,.34),c(.6,.3,.1)),c('Yes','No'),c('Statistics','English','Sociology'), showWork=TRUE)#
treeDiag(c('Breakfast?','Go to class'),c(.4,.11,.49),list(c(.4,.36,.24),c(.6,.3,.1),c(.1,.4,.5)),c('one','two','three'),c('Statistics','English','Sociology'))#
treeDiag(c('Dow Jones rise?', 'NASDAQ rise?'), c(0.53, 0.47), list(c(0.75, 0.25), c(0.72, 0.28)), solSub=list(c("(a)", "(b)"), c("(c)", "(d)")), solwd=0.08)
treeDiag(c("Student", "Parents"), c(0.49, 0.51), list(c(0.57, 0.43), c(0.38, 0.62)), c("uses","not"), c("used","not"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Does the patient have cancer?", "What is the result of the test?"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Patien's cancer status", "What is the result of the test?"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Patien's cancer status", "Result of the test"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Patien's cancer status", "Result of the test"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 4, showWork=TRUE)
0.0015/(0.0015 + 0.9671)
q()
183.75-50
2000*1.3
q()
90*3
270*1.3
q()
187.32+15.14+18.53
220.99+27.88
70/4
.15+.175
.15/.325
treeDiag <- function(main, p1, p2, out1=c('Yes','No'), out2=c('Yes','No'), textwd=0.15, solwd=0.2, SBS=c(TRUE,TRUE), showSol=TRUE, solSub=NULL, digits=4, textadj=0.015, cex.main=1.3, col.main="#999999", showWork=FALSE){#
	#
	#=====> Checks <=====##
	SBS <- rep(SBS, 2)#
	if(length(p1) != length(out1)){#
		stop("p1 and out1 must have the same length")#
	}#
	P1 <- format(p1)#
	P2 <- list()#
	for(i in 1:length(p1)){#
		P2[[i]] <- format(p2[[i]])#
		if(length(p2[[i]]) != length(out2)){#
			stop("Each list item of p2 must have the same length as out2")#
		}#
	}#
	#
	#=====> Prepare Formatting <=====##
	x <- (0.75-2*textwd)/2#
	x <- c(0, x, x+textwd, 2*x+textwd, 2*x+2*textwd+0.05)#
	y1 <- c(.4, -.4)#
	y2 <- c(.21, -.21)#
	n1 <- length(p1)#
	n2 <- length(p2[[1]])#
	if(n1 == 2 && n2 > 2){#
		y2 <- seq(.23, -.23, len=n2)#
	} else if(n1 > 2 && n2 == 2){#
		y1 <- seq(.5, -.5, len=n1)#
	} else if(n1 > 2 && n2 > 2){#
		y1 <- seq(.5, -.5, len=n1)#
		y2 <- seq(.15, -.15, len=n2)#
	}#
	#
	#=====> Basic Plot <=====##
	par(mar=c(0,0,0,0))#
	plot(1,1,type='n', axes=F, ylim=c(-.76,1.03), xlim=c(0,0.8+solwd), xlab='', ylab='')#
	text(mean(x[2:3]), 0.95, main[1], cex=cex.main, col=col.main)#
	text(mean(x[4:5]), 0.95, main[2], cex=cex.main, col=col.main)#
	#
	#=====> Branches <=====##
	for(i in 1:n1){#
		lines(x[1:2], c(0,y1[i]))#
		lines(x[2:3], c(y1[i],y1[i]), lty=2)#
		if(SBS[1]){#
			temp <- paste(out1[i], P1[i], sep=",  ")#
			text(mean(x[2:3]), y1[i]-textadj, temp, pos=3)#
		} else {#
			text(mean(x[2:3]), y1[i], P1[i]+textadj, pos=1)#
			text(mean(x[2:3]), y1[i], out1[i]-textadj, pos=3)#
		}#
		for(j in 1:n2){#
			lines(x[3:4], y1[i]+c(0, y2[j]))#
			lines(x[4:5], y1[i]+c(y2[j], y2[j]), lty=2)#
			if(SBS[2]){#
				temp <- paste(out2[j], P2[[i]][j], sep=",  ")#
				text(mean(x[4:5]), y1[i]+y2[j]-textadj, temp, pos=3)#
			} else {#
				text(mean(x[4:5]), y1[i]+y2[j], P2[[i]][j], pos=1)#
				text(mean(x[4:5]), y1[i]+y2[j], out2[j], pos=3)#
			}#
			if(showSol){#
				sol <- round(p1[i]*p2[[i]][j], digits)#
				if(showWork){#
					temp <- paste(p1[i], p2[[i]][j], sep="*")#
					sol  <- paste(temp, sol, sep=" = ")#
				}#
				if(!is.null(solSub)[1]){#
					sol  <- solSub[[i]][j]#
				}#
				text(x[5], y1[i]+y2[j], sol, pos=4)#
			}#
		}#
	}#
}
treeDiag(main = c("Type of twins","Gender"), p1 = c(0.3, 0.7), p2 = list(c(0.5,0.5,0), c(0.25,0.25,0.5)), out1 = c("identical","fraternal"), out2 = c("males","females","male&female"), showWork = TRUE)
q()
70*.9
70*.21
70*.1
66-12
66+12
0.03+0.06+0.19+0.07
0.35 + 0.19
exp(.0077)
q()
data()
data(sleep)
dim(sleep)
sleep
?sleep
data(package = .packages(all.available = TRUE))
data(poison.data)
library(BHH2)
data(poison.data)
?poison.data
data(penicillin.data)
?penicillin.data
data(Cushings)
library(MASS)
data(Cushings)
? Cushings
data(DDT)
? DDT
data(Pima.te)
?Pima.te
dim(Pima.te)
names(Pima.te)
data(Pima.tr)
names(Pima.tr)
?Pima.tr
dim(Pima.tr)
summary(Pima.tr)
a = lm(glu~ npreg+ bp+ skin+ bmi+ age+type)
a = lm(glu~ npreg+ bp+ skin+ bmi+ age+type, data = Pima.tr)
summary(a)
step(a)
a = lm(glu~ npreg+ bp+ skin+ bmi+ age+type, data = Pima.tr)
summary(a)
?Pima.tr
a = lm(glu~ bp + age + type, data = Pima.tr)
summary(a)
print(summary(a), digits = 2)
summary(Pima.tr$bp)
0.35 * 5
76+.35*72+.43*30
76+.35*72+.43*30+26.57
7.35*72+.43*30
.35*72+.43*30
76+.35*30+.43*72
.13/.17
(.055*.99)/((.055*.99)+(.945*.05))
(.055*.99)/((.055*.99)+(.945*.005))
76+.35*72+30*.43
?na.rm
log(4)
log(0.01)
3.5+9+5+6+3+1
3.5+6.5+4+6+3+1
3.5+6.5+4+4+2.5+.5
3.5+6.5+4+3+2.5+.5
0.015/(0.015+0.175)
0.26^2 * 0.74
 600 * 0.74
600 * 0.74 * 0.26
sqrt(600 * 0.74 * 0.26)
?step
1000/60
q()
75000/12
q()
25-18
3+7+15+25+5
q()
tr = c(rep("anti",85), rep("pl",81))#
imp = c(rep("yes",66), rep("no",19), rep("yes",65), rep("no",16))
source("http://stat.duke.edu/courses/Spring12/sta101.1/labs/inference.R")
inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "theoretical", nsim = 100, null = 0, alternative = "twosided")
66+19
65+16
66+65
19+16
131+35
85+81
2+2+4+2+3
3+2+4+2+3
2+2+4+2+3
3+1+1
1+2+2+3
2+1+3.5+2+1.5+1
2+1+3.5+2+1.5+7+1+1
2+1+3.5+2+1.5+1+7+1+1
1+2+2+2+1
1+2+2+2+1+1
1-(4^5)
1-(.4^5)
1-(.45^5)
1-(.6^5)
2.58*sqrt(.35*.65/3012)
2.57*sqrt(.35*.65/3012)
13+5+5+8+20+9+4+6+10+20
8+20+13+5+5+9+6+4
66/85
65/81
0.802-.776
#
set.seed(284)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "twosided", simdist = TRUE)
2.49*160/5
1879-79.69
1879-79.68
1879+79.68
20 * 24 / 40
(16-12)^2/12 + (8+12)^2/12 + (4-12)^2/8 + 0
(16-12)^2/12 + (8-12)^2/12 + (4-12)^2/8 + 0
19.6-19.3
sqrt(25.5^2/6617 + 22.5^2/17234)
0.3/0.3573
7.5+3.5+9.5+3+2+.5+.5+3.5+8+14
10+4+2+5+12.5+1.5+2+1.5+8+10
10+4+2+5.5+12.5+1.5+2+1.5+8+10
7.5+16+12+5+3+9+5+3+10+16
16.9/26.7*8.49
38.8-5.37*30.8
11+5+5+8+16.5+7+4+2+18+7
1+16+12+5+3+9+2.5+3+8+12
12+4+4+8+16+7+4+2+8+8
 (1 − 0.259) ∗ (1 − 0.926)
 (1 − 0.259) * (1 − 0.926)
(1-.259)*.926
.74*.26
(1-.259)*(1-.926)
8+14+8+4+3+7+2+2.5+7+10
1+1+.5+2
20-4.5
sqrt(25.5^2/6617+22.5^2/17234)
sqrt(25.5^2/6617+22.5^2/17234)^2
.098+.029
exp(.43)
exp(10.51)
exp(10.59)
exp(10.59)*exp(-.07)
exp(-.07)
exp(-.07)*39735.49
0.932*39735.49
6.5+15+10.5+5+4+7+5+3.5+7+16
97.37*.075+100*.05+98*.15+95*.15+97*.075+85.5*.1+96.5*.25
97.37*.075+100*.05+98*.15+95*.15+97*.075+85.5*.10+96.5*.25
97.37*.075 + 100*.05 + 98*.15 + 95*.15 + 97*.075 + 85.5*.10 + 96.5*.25
.075+.05+.15+.15+.075+.1+.25
97.37*.075 + 100*.05 + 98*.15 + 98*.15 + 95*.15 + 97*.075 + 85.5*.10 + 96.5*.25
sqrt(0.4*.6/200)
sqrt(0.5*.5/200)
q()
90-57+1
72+34
q()
gr <- c(rep("rosig", 67593), rep("piog",159978))#
out <- c(rep(c("y", "n"), c(2593, 67593-2593)), rep(c("y", "n"), c(5386,159978-5386)))#
#
set.seed(13)#
N <- 10^3#
rosigY <- rep(NA, N)#
for(i in 1:N){#
	grf  <- sample(gr)#
	rosigY[i]   <- sum(out[grf == "rosig"] == "y")#
}
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = TRUE, ylim=c(0,max(values)))#
#axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = TRUE)#
#axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
set.seed(13)#
N <- 10^2#
rosigY <- rep(NA, N)#
for(i in 1:N){#
	grf  <- sample(gr)#
	rosigY[i]   <- sum(out[grf == "rosig"] == "y")#
}
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = TRUE)#
#axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = TRUE, ylim=c(0,max(values)))#
#axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
	x   <- diffs[i]
x
	rec <- sum(diffs == x)
rec
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)
hist(diffs)
?points
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = TRUE, ylim=c(0,max(values)),)
#
diffs = rosigY#
values  <- table(diffs)#
plot(diffs, type="n", xlab = "simulated differences in proportions", ylab = "", axes = TRUE, ylim=c(0,max(values)), xlim = c(2200,2500))#
#axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8)#
}
setwd("/Users/mine/Desktop/Open Intro/EOCE - Second Edition/01/figures/smoking")#
#
tr = c(rep("anti",85), rep("pl",81))#
imp = c(rep("yes",66), rep("no",19), rep("yes",65), rep("no",16))
set.seed(284)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "twosided", simdist = TRUE)
source("http://stat.duke.edu/courses/Spring12/sta101.1/labs/inference.R")
set.seed(284)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "twosided", simdist = TRUE)
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}
set.seed(532)
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "twosided", simdist = TRUE)
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}
#
set.seed(532)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "twosided", simdist = TRUE)
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}
setwd("/Users/mine/Desktop/Open Intro/EOCE - Second Edition/01/figures/sinusitis")
pdf("sinusitis_rand.pdf", 7, 4)#
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}#
#
dev.off()
set.seed(532)#
diffs = inference(imp, tr, outcome = "yes", order = c("pl","anti"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "greater", simdist = TRUE)
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}
#
set.seed(532)#
diffs = inference(imp, tr, outcome = "yes", order = c("pl","anti"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "greater", simdist = TRUE)
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}
pdf("sinusitis_rand.pdf", 7, 4)#
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}#
#
dev.off()
set.seed(532)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "greater", simdist = TRUE)
pdf("sinusitis_rand.pdf", 7, 4)#
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}#
#
dev.off()
#
set.seed(532)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "lower", simdist = TRUE)
set.seed(532)#
diffs = inference(imp, tr, outcome = "yes", order = c("anti","pl"), est = "proportion", type = "ht", method = "simulation", nsim = 100, null = 0, alternative = "less", simdist = TRUE)
pdf("sinusitis_rand.pdf", 7, 4)#
par(mar=c(3.8,3.5,0.5,0.5), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
values  <- table(diffs)#
plot(diffs, type="n", xlim=c(-0.20,0.20), xlab = "simulated differences in proportions", ylab = "", axes = FALSE, ylim=c(0,max(values)))#
axis(1, at = seq(-0.2,0.2,0.02), labels = c(-0.2,rep(NA,4),-0.1,rep(NA,4),0,rep(NA,4),0.1,rep(NA,4),0.2))#
for(i in 1:length(diffs)){#
	x   <- diffs[i]#
	rec <- sum(diffs == x)#
	points(rep(x, rec), 1:rec, pch=20, cex=0.8, col = "#225588")#
}#
#
dev.off()
q()
