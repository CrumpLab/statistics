10+15+17+19+10+10+5
a = read.csv("/Users/mine/Desktop/HW graded - Sta 101S12 - Sheet1 (1).csv")
summary(aov(as.numeric(Project.1.Score)~Who.Graded, data = a))
boxplot(as.numeric(a$Project.1.Score)~a$Who.Graded)
mean(as.numeric(a$Project.1.Score))
sumary(as.numeric(a$Project.1.Score))
summary(as.numeric(a$Project.1.Score))
q()
x=read.csv("/Users/mine/Desktop/Projects/DataFest/Kiva data/lenders/lenders.csv")
library(RJSONIO)
head(x)
length(x$lender_id)
length(unique(x$lender_id))
t=table(x$lender_id)
t[t>1]
t
which(t!=1)
length(t)
which(is.na(x$lender_id))
x[26692,]
x[which(is.na(x$lender_id)),]
l1=list(1,2,3)
l2=list(4,5,6)
append(l1,l2)
11100/5*7
11100/6*7
q()
3937.60/1.77
3584.80/1.77
2225/5
445/2
105.53-2.01*32.04
105.53+2.01*32.04
105.03-2.01*32.04
105.03+2.01*32.04
exp(0.14)
2000/35*45
2000/35*50
q()
library(lme4)
install.packages(lme4)
install.packages("lme4")
?lme4
library(lme4)
?lme4
?lme
?glmer
10000/5
1865*5
1865*6
17000/7
2428-1865
563/14
1865*7+30*14
1865*7+35*14
1865*7
17000-13055
35*14
10000/5
10000/6
1865*7
10000/5*7
1865*7
? readMat
?? readMat
	install.packages("R.matlab")#
	library(R.matlab)
q()
1850*7
1850*6
1850*5
30*14
q()
1250*6
416/24
10000/5.5
1818.182/14
30*13*5
1+1.5+1.5+1.5+.5+3.5+1+1+1.5+1.5
goog = read.csv("http://stat.duke.edu/courses/Fall11/sta101.02/labs/goog.csv")
goog
library(mlbench)
install.packages("mlbench")
library(mlbench)
data(BostonHousing)
dim(BostonHousing)
??sleep
library(openintro)
data(mammals)
mammals
50000/8
500*8
150000/12
q()
15*8
120/45
120/40
d = read.csv("/Users/mine/Desktop/Projects/DataFest/Kiva data/new/datafest2012/main files/loans.csv")
names(d)
prop.table(table(d$status, d$location.country),1)
prop.table(table(d$location.country, d$status),1)
prop.table(table(d$location.country, d$status),2)
sum(prop.table(table(d$location.country, d$status),2)[1,])
sum(prop.table(table(d$location.country, d$status),1)[1,])
prop.table(table(d$location.country, d$status),1)
names(loans)
names(d)
table(d$posted_yr)
table(d$location.country)
cat(table(d$location.country))
print(table(d$location.country))
names(table(d$location.country))
table(d$posted_yr)
library(openintro)
?treeDiag
??treeDiag
treeDiag(c("Student", "Parents"), c(0.49, 0.51), list(c(0.57, 0.43), c(0.38, 0.62)), c("uses","not"), c("used","not"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag <- function(main, p1, p2, out1=c('Yes','No'), out2=c('Yes','No'), textwd=0.15, solwd=0.2, SBS=c(TRUE,TRUE), showSol=TRUE, solSub=NULL, digits=4, textadj=0.015, cex.main=1.3, col.main="#999999", showWork=FALSE){#
	#
	#=====> Checks <=====##
	SBS <- rep(SBS, 2)#
	if(length(p1) != length(out1)){#
		stop("p1 and out1 must have the same length")#
	}#
	P1 <- format(p1)#
	P2 <- list()#
	for(i in 1:length(p1)){#
		P2[[i]] <- format(p2[[i]])#
		if(length(p2[[i]]) != length(out2)){#
			stop("Each list item of p2 must have the same length as out2")#
		}#
	}#
	#
	#=====> Prepare Formatting <=====##
	x <- (0.75-2*textwd)/2#
	x <- c(0, x, x+textwd, 2*x+textwd, 2*x+2*textwd+0.05)#
	y1 <- c(.4, -.4)#
	y2 <- c(.21, -.21)#
	n1 <- length(p1)#
	n2 <- length(p2[[1]])#
	if(n1 == 2 && n2 > 2){#
		y2 <- seq(.23, -.23, len=n2)#
	} else if(n1 > 2 && n2 == 2){#
		y1 <- seq(.5, -.5, len=n1)#
	} else if(n1 > 2 && n2 > 2){#
		y1 <- seq(.5, -.5, len=n1)#
		y2 <- seq(.15, -.15, len=n2)#
	}#
	#
	#=====> Basic Plot <=====##
	par(mar=c(0,0,0,0))#
	plot(1,1,type='n', axes=F, ylim=c(-.76,1.03), xlim=c(0,0.8+solwd), xlab='', ylab='')#
	text(mean(x[2:3]), 0.95, main[1], cex=cex.main, col=col.main)#
	text(mean(x[4:5]), 0.95, main[2], cex=cex.main, col=col.main)#
	#
	#=====> Branches <=====##
	for(i in 1:n1){#
		lines(x[1:2], c(0,y1[i]))#
		lines(x[2:3], c(y1[i],y1[i]), lty=2)#
		if(SBS[1]){#
			temp <- paste(out1[i], P1[i], sep=",  ")#
			text(mean(x[2:3]), y1[i]-textadj, temp, pos=3)#
		} else {#
			text(mean(x[2:3]), y1[i], P1[i]+textadj, pos=1)#
			text(mean(x[2:3]), y1[i], out1[i]-textadj, pos=3)#
		}#
		for(j in 1:n2){#
			lines(x[3:4], y1[i]+c(0, y2[j]))#
			lines(x[4:5], y1[i]+c(y2[j], y2[j]), lty=2)#
			if(SBS[2]){#
				temp <- paste(out2[j], P2[[i]][j], sep=",  ")#
				text(mean(x[4:5]), y1[i]+y2[j]-textadj, temp, pos=3)#
			} else {#
				text(mean(x[4:5]), y1[i]+y2[j], P2[[i]][j], pos=1)#
				text(mean(x[4:5]), y1[i]+y2[j], out2[j], pos=3)#
			}#
			if(showSol){#
				sol <- round(p1[i]*p2[[i]][j], digits)#
				if(showWork){#
					temp <- paste(p1[i], p2[[i]][j], sep="*")#
					sol  <- paste(temp, sol, sep=" = ")#
				}#
				if(!is.null(solSub)[1]){#
					sol  <- solSub[[i]][j]#
				}#
				text(x[5], y1[i]+y2[j], sol, pos=4)#
			}#
		}#
	}#
}#
#
# Examples#
# generic with random probabilities#
treeDiag(c('Flight on time?','Luggage on time?'),c(.8,.2),list(c(.97,.03),c(.15,.85)))#
treeDiag(c('Breakfast?','Go to class'),c(.4,.6),list(c(.4,.36,.34),c(.6,.3,.1)),c('Yes','No'),c('Statistics','English','Sociology'), showWork=TRUE)#
treeDiag(c('Breakfast?','Go to class'),c(.4,.11,.49),list(c(.4,.36,.24),c(.6,.3,.1),c(.1,.4,.5)),c('one','two','three'),c('Statistics','English','Sociology'))#
treeDiag(c('Dow Jones rise?', 'NASDAQ rise?'), c(0.53, 0.47), list(c(0.75, 0.25), c(0.72, 0.28)), solSub=list(c("(a)", "(b)"), c("(c)", "(d)")), solwd=0.08)
treeDiag(c("Student", "Parents"), c(0.49, 0.51), list(c(0.57, 0.43), c(0.38, 0.62)), c("uses","not"), c("used","not"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Does the patient have cancer?", "What is the result of the test?"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Patien's cancer status", "What is the result of the test?"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Patien's cancer status", "Result of the test"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 2, showWork=TRUE)
treeDiag(c("Patien's cancer status", "Result of the test"), c(0.003, 0.997), list(c(0.5, 0.5), c(0.03, 0.97)), c("cancer","no cancer"), c("positive","negative"), textwd=0.19, solwd=0.25, digits = 4, showWork=TRUE)
0.0015/(0.0015 + 0.9671)
q()
183.75-50
2000*1.3
q()
90*3
270*1.3
q()
187.32+15.14+18.53
220.99+27.88
70/4
.15+.175
.15/.325
treeDiag <- function(main, p1, p2, out1=c('Yes','No'), out2=c('Yes','No'), textwd=0.15, solwd=0.2, SBS=c(TRUE,TRUE), showSol=TRUE, solSub=NULL, digits=4, textadj=0.015, cex.main=1.3, col.main="#999999", showWork=FALSE){#
	#
	#=====> Checks <=====##
	SBS <- rep(SBS, 2)#
	if(length(p1) != length(out1)){#
		stop("p1 and out1 must have the same length")#
	}#
	P1 <- format(p1)#
	P2 <- list()#
	for(i in 1:length(p1)){#
		P2[[i]] <- format(p2[[i]])#
		if(length(p2[[i]]) != length(out2)){#
			stop("Each list item of p2 must have the same length as out2")#
		}#
	}#
	#
	#=====> Prepare Formatting <=====##
	x <- (0.75-2*textwd)/2#
	x <- c(0, x, x+textwd, 2*x+textwd, 2*x+2*textwd+0.05)#
	y1 <- c(.4, -.4)#
	y2 <- c(.21, -.21)#
	n1 <- length(p1)#
	n2 <- length(p2[[1]])#
	if(n1 == 2 && n2 > 2){#
		y2 <- seq(.23, -.23, len=n2)#
	} else if(n1 > 2 && n2 == 2){#
		y1 <- seq(.5, -.5, len=n1)#
	} else if(n1 > 2 && n2 > 2){#
		y1 <- seq(.5, -.5, len=n1)#
		y2 <- seq(.15, -.15, len=n2)#
	}#
	#
	#=====> Basic Plot <=====##
	par(mar=c(0,0,0,0))#
	plot(1,1,type='n', axes=F, ylim=c(-.76,1.03), xlim=c(0,0.8+solwd), xlab='', ylab='')#
	text(mean(x[2:3]), 0.95, main[1], cex=cex.main, col=col.main)#
	text(mean(x[4:5]), 0.95, main[2], cex=cex.main, col=col.main)#
	#
	#=====> Branches <=====##
	for(i in 1:n1){#
		lines(x[1:2], c(0,y1[i]))#
		lines(x[2:3], c(y1[i],y1[i]), lty=2)#
		if(SBS[1]){#
			temp <- paste(out1[i], P1[i], sep=",  ")#
			text(mean(x[2:3]), y1[i]-textadj, temp, pos=3)#
		} else {#
			text(mean(x[2:3]), y1[i], P1[i]+textadj, pos=1)#
			text(mean(x[2:3]), y1[i], out1[i]-textadj, pos=3)#
		}#
		for(j in 1:n2){#
			lines(x[3:4], y1[i]+c(0, y2[j]))#
			lines(x[4:5], y1[i]+c(y2[j], y2[j]), lty=2)#
			if(SBS[2]){#
				temp <- paste(out2[j], P2[[i]][j], sep=",  ")#
				text(mean(x[4:5]), y1[i]+y2[j]-textadj, temp, pos=3)#
			} else {#
				text(mean(x[4:5]), y1[i]+y2[j], P2[[i]][j], pos=1)#
				text(mean(x[4:5]), y1[i]+y2[j], out2[j], pos=3)#
			}#
			if(showSol){#
				sol <- round(p1[i]*p2[[i]][j], digits)#
				if(showWork){#
					temp <- paste(p1[i], p2[[i]][j], sep="*")#
					sol  <- paste(temp, sol, sep=" = ")#
				}#
				if(!is.null(solSub)[1]){#
					sol  <- solSub[[i]][j]#
				}#
				text(x[5], y1[i]+y2[j], sol, pos=4)#
			}#
		}#
	}#
}
treeDiag(main = c("Type of twins","Gender"), p1 = c(0.3, 0.7), p2 = list(c(0.5,0.5,0), c(0.25,0.25,0.5)), out1 = c("identical","fraternal"), out2 = c("males","females","male&female"), showWork = TRUE)
q()
70*.9
70*.21
70*.1
66-12
66+12
0.03+0.06+0.19+0.07
0.35 + 0.19
exp(.0077)
q()
data()
data(sleep)
dim(sleep)
sleep
?sleep
data(package = .packages(all.available = TRUE))
data(poison.data)
library(BHH2)
data(poison.data)
?poison.data
data(penicillin.data)
?penicillin.data
data(Cushings)
library(MASS)
data(Cushings)
? Cushings
data(DDT)
? DDT
data(Pima.te)
?Pima.te
dim(Pima.te)
names(Pima.te)
data(Pima.tr)
names(Pima.tr)
?Pima.tr
dim(Pima.tr)
summary(Pima.tr)
a = lm(glu~ npreg+ bp+ skin+ bmi+ age+type)
a = lm(glu~ npreg+ bp+ skin+ bmi+ age+type, data = Pima.tr)
summary(a)
step(a)
a = lm(glu~ npreg+ bp+ skin+ bmi+ age+type, data = Pima.tr)
summary(a)
?Pima.tr
a = lm(glu~ bp + age + type, data = Pima.tr)
summary(a)
print(summary(a), digits = 2)
summary(Pima.tr$bp)
0.35 * 5
76+.35*72+.43*30
76+.35*72+.43*30+26.57
7.35*72+.43*30
.35*72+.43*30
76+.35*30+.43*72
.13/.17
(.055*.99)/((.055*.99)+(.945*.05))
(.055*.99)/((.055*.99)+(.945*.005))
76+.35*72+30*.43
?na.rm
log(4)
log(0.01)
3.5+9+5+6+3+1
3.5+6.5+4+6+3+1
3.5+6.5+4+4+2.5+.5
3.5+6.5+4+3+2.5+.5
0.015/(0.015+0.175)
0.26^2 * 0.74
 600 * 0.74
600 * 0.74 * 0.26
sqrt(600 * 0.74 * 0.26)
?step
1000/60
q()
75000/12
q()
25-18
3+7+15+25+5
q()
setwd("/Users/mine/Desktop/Open Intro/EOCE - Second Edition/01/figures/country")
country = read.csv("country.csv", h = T)
plot(log(country$life_exp) ~ country$internet, xlab="% Internet users", ylab="Life expectancy", pch=20, col="#225588", cex.lab = 1.5, cex.axis = 1.5)
plot(country$life_exp ~ country$internet, xlab="% Internet users", ylab="Life expectancy", pch=20, col="#225588", cex.lab = 1.5, cex.axis = 1.5)
plot(log(country$life_exp) ~ country$internet, xlab="% Internet users", ylab="Life expectancy", pch=20, col="#225588", cex.lab = 1.5, cex.axis = 1.5)
(0.20-.15)/(0.0357)
(0.20-.15)/(0.0206)
(0.20-.15)/(0.0292)
1.96*220/15
(1.96*220/15)^2
x = c(1,2,4,5,6)#
y = c(1,4,5,2,5)
summary(lm(y~x))
1.7674+0.4535*x
y_hat = 1.7674+0.4535*x
cor(x.y)
cor(x,y)
cor(y, y_hat)
x = c(0,1,2,3,4,50)
y = c(0,1,2,3,45,50)
mean(x)
mean(y)
x = c(0,1,2,3,4,80)
mean(x)
x = c(0,1,2,3,4,80)
y = c(0,1,2,3,45,50)
mean(x)
mean(y)
20*.56
20*.44
10*.2
40*.2
10+15+46+10
3+4+13+20+5
2+4+13+20+5+3
q()
