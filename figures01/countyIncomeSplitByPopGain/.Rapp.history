horiz=FALSE
width=2/3
lwd=1
lcol='black'
medianLwd=2
pch=20
pchCex=1.8
col=rgb(0,0,0,0.25)
add=FALSE
key=NULL
axes=TRUE
xlab=''
ylab=''
xlim=NULL
ylim=NULL
is.null(fact)
is.null(key)[1]
if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact
key
N    <- length(uFact)
fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}
boxPlot(x[fact == lev[1]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], axes=FALSE, xlab=xlab, ylab=ylab,#
  	        xlim=xlim, ylim=ylim, ...)
boxPlot(x[fact == lev[1]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], axes=FALSE, xlab=xlab, ylab=ylab,#
  	        xlim=xlim, ylim=ylim)
N
Recall(x[fact == uFact[1]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], axes=FALSE, xlab=xlab, ylab=ylab,#
  	        xlim=xlim, ylim=ylim)
boxPlot(x[fact == uFact[1]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], axes=FALSE, xlab=xlab, ylab=ylab,#
  	        xlim=xlim, ylim=ylim)
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL
x <- pov
!is.null(fact)[1]
if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE, ...)#
      if(axes){#
        axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}
plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)
if(axes){#
        axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	    axis(ifelse(horiz, 1, 2))#
      }
add
uFact
axis(ifelse(horiz, 2, 1))#
  	    axis(ifelse(horiz, 1, 2))
axis(ifelse(horiz, 1, 2))
plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }
FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[3]
FN
FENCE
FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[3]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2
any(above)
if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}
na.rm=TRUE
if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL
if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}
FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[3]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2
any(above)
any(is.na(x))
FN
FENCE
FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2
show
horiz
rect(add-w, FN[2], add+w, FN[4], lwd=lwd, col=lcol)
rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol, col=FALSE)
plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }
rect(FN[2], add-w, FN[4], add+w, lwd=lwd, col=lcol)
rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol, col=FALSE)
?rec
?rect
lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)
lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)
lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)
lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)
lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)
any(show)
points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
  	Recall(x[fact == uFact[1]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], axes=FALSE, xlab=xlab, ylab=ylab,#
  	        xlim=xlim, ylim=ylim, na.rm=FALSE, ...)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 2:N){#
        Recall(x[fact == uFact[i]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[i], ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
boxPlot(pov, pop, xlab='type', ylab='price')
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
  	Recall(x[fact == uFact[1]], fact=NULL, horiz=horiz, width=width,#
  	        lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], axes=FALSE, xlab=xlab, ylab=ylab,#
  	        xlim=xlim, ylim=ylim, na.rm=FALSE, ...)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 2:N){#
        Recall(x[fact == uFact[i]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[i], ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
boxPlot(pov, pop, xlab='type', ylab='price')
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
    plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
    if(axes){#
      axis(ifelse(horiz, 1, 2))#
    }#
  	Recall(x[fact == uFact[1]], fact=NULL, horiz=horiz, width=width,#
  	        lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], key=key[1], na.rm=FALSE, ...)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 2:N){#
        Recall(x[fact == uFact[i]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[i], ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
boxPlot(pov, pop, xlab='type', ylab='price')
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL
fact <- pop
pov -> x
!is.null(fact)[1]
if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
    plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
    if(axes){#
      axis(ifelse(horiz, 1, 2))#
    }
xH <- x
x <- x[fact == uFact[1]]
add
addH <- add
add
if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}
FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2
FN
FENCE
horiz
rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)
add
add <- add[1]
rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)
plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
    if(axes){#
      axis(ifelse(horiz, 1, 2))#
    }
rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }
x <- xH
fact <- factH
add <- addH
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
    plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
    if(axes){#
      axis(ifelse(horiz, 1, 2))#
    }#
  	Recall(x[fact == uFact[1]], fact=NULL, horiz=horiz, width=width,#
  	        lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], na.rm=FALSE, ...)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 2:N){#
        Recall(x[fact == uFact[i]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[i], ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
boxPlot(pov, pop, xlab='type', ylab='price')
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
    plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
    if(axes){#
      axis(ifelse(horiz, 1, 2))#
    }#
  	Recall(x[fact == uFact[1]], fact=NULL, horiz=horiz, width=width,#
  	        lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[1], na.rm=FALSE, ...)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 2:N){#
        Recall(x[fact == uFact[i]], horiz=horiz, width=width, lwd=lwd, lcol,#
  	        medianLwd=medianLwd, pch=pch, pchCex=pchCex, col=col,#
  	        add=add[i], ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
debug(boxPlot)
boxPlot(pov, pop, xlab='type', ylab='price')
range(x)
FN
IQR
FENCE
add
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$poverty#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "loss"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#loss <- density(pov[pop == "loss"])#
#
#yR <- c(0, max(c(gain$y, loss$y)))#
#xR <- range(c(gain$x, loss$x))#
xR  <- range(pov)
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
    plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 2:N){#
  	    Recall(x[fact == uFact[i]], fact=NULL, horiz=horiz, width=width,#
  	        lwd=lwd, lcol=lcol, medianLwd=medianLwd, pch=pch,#
  	        pchCex=pchCex, col=col, add=add[1], na.rm=FALSE, ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
boxPlot(pov, pop, xlab='type', ylab='price')
fact=NULL#
horiz=FALSE#
width=2/3#
lwd=1#
lcol='black'#
medianLwd=2#
pch=20#
pchCex=1.8#
col=rgb(0,0,0,0.25)#
add=FALSE#
key=NULL#
axes=TRUE#
xlab=''#
ylab=''#
xlim=NULL#
ylim=NULL#
#
`boxPlot` <-#
function(x, fact=NULL, horiz=FALSE, width=2/3, lwd=1, lcol='black', medianLwd=2, pch=20, pchCex=1.8, col=rgb(0,0,0,0.25), add=FALSE, key=NULL, axes=TRUE, xlab='', ylab='', xlim=NULL, ylim=NULL, na.rm=TRUE, ...){#
  if(!is.null(fact)[1]){#
  	if(na.rm){#
  	  keep <- !is.na(x) & !is.na(fact)#
  	  fact <- fact[keep]#
  	  x    <- x[keep]#
  	}#
  	if(is.null(key)[1]){#
  	  if(is.factor(fact)[1]){#
  	    uFact <- levels(fact)#
  	  } else {#
  	    uFact <- sort(unique(fact))#
  	  }#
  	  key   <- uFact#
  	} else {#
  	  uFact <- key#
  	}#
  	N    <- length(uFact)#
  	fact <- as.character(fact)#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1:length(uFact)#
  	}#
  	if(is.null(xlim)[1]){#
  	  xlim <- c(1-width,N+width)#
  	  if(horiz){#
  	    xlim <- range(x)#
  	  }#
  	}#
  	if(is.null(ylim)[1]){#
  	  ylim <- range(x)#
  	  if(horiz){#
  	    ylim <- c(1-width,N+width)#
  	  }#
  	}#
    plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
         xlim=xlim, ylim=ylim, axes=FALSE)#
  	if(axes){#
  	  axis(ifelse(horiz, 2, 1), at=add, labels=uFact)#
  	  axis(ifelse(horiz, 1, 2))#
  	}#
  	if(N > 1){#
  	  for(i in 1:N){#
  	    Recall(x[fact == uFact[i]], fact=NULL, horiz=horiz, width=width,#
  	        lwd=lwd, lcol=lcol, medianLwd=medianLwd, pch=pch,#
  	        pchCex=pchCex, col=col, add=add[i], na.rm=FALSE, ...)#
  	  }#
  	}#
  } else {#
  	if(na.rm){#
  	  keep <- !is.na(x)#
  	  x    <- x[keep]#
  	}#
  	if(is.logical(add) && add == FALSE){#
  	  add <- 1#
  	  if(is.null(xlim)[1]){#
  	    xlim <- c(add-width,add+width)#
  	    if(horiz){#
  	      xlim <- range(x)#
  	    }#
  	  }#
  	  if(is.null(ylim)[1]){#
  	    ylim <- range(x)#
  	    if(horiz){#
  	      ylim <- c(1-width,N+width)#
  	    }#
      }#
      plot(0, 0, type="n", xlab=xlab, ylab=ylab,#
           xlim=xlim, ylim=ylim, axes=FALSE)#
      if(axes){#
  	    axis(ifelse(horiz, 1, 2))#
      }#
  	}#
  	FN    <- c(min(x), quantile(x, c(0.25, 0.5, 0.75)), max(x))#
  	IQR   <- FN[4] - FN[2]#
  	FENCE <- FN[c(2,4)] + 1.5*IQR*c(-1,1)#
  	below <- x < FENCE[1]#
  	above <- x > FENCE[2]#
  	if(!any(below)){#
  	  FENCE[1] <- FN[1]#
  	}#
  	if(!any(above)){#
  	  FENCE[2] <- FN[5]#
  	}#
  	show  <- below | above#
  	w     <- width/2#
  	if(horiz){#
  	  rect(FN[2], add-w, FN[4], add+w, lwd=lwd, border=lcol)#
  	  lines(rep(FN[3], 2), add+w*c(-1,1), lwd=medianLwd, col=lcol)#
  	  lines(c(FENCE[1], FN[2]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[1], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  lines(c(FENCE[2], FN[4]), rep(add,2), lwd=lwd, col=lcol)#
  	  lines(rep(FENCE[2], 2), add+w*c(-1,1), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(x[show], rep(add, sum(show)),#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	} else {#
  	  rect(add-w, FN[2], add+w, FN[4], lwd=lwd, border=lcol)#
  	  lines(add+w*c(-1,1), rep(FN[3], 2), lwd=medianLwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[1], FN[2]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[1], 2), lwd=lwd, col=lcol)#
  	  lines(rep(add,2), c(FENCE[2], FN[4]), lwd=lwd, col=lcol)#
  	  lines(add+w*c(-1,1), rep(FENCE[2], 2), lwd=lwd, col=lcol)#
  	  if(any(show)){#
  	    points(rep(add, sum(show)), x[show],#
  	           pch=pch, cex=pchCex, col=col)#
  	  }#
  	}#
  }#
}
boxPlot(pov, pop, xlab='type', ylab='price')
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$poverty#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "loss"#
COL <- c('#22883377', '#665511FF')
boxPlot(pov, pop, xlab='type', ylab='price')
boxplot(pov ~ pop)
boxPlot(pov, pop, xlab='type', ylab='price')
boxplot(pov ~ pop)
boxPlot(pov, pop, xlab='type', ylab='price', width=3/4)
boxplot(pov ~ pop)
boxPlot(pov, pop, xlab='type', ylab='price', width=3/4)
boxplot(pov ~ pop)
boxPlot(pov, pop, xlab='type', ylab='price', width=3/4)
boxplot(pov ~ pop)
boxPlot(pov, pop, xlab='type', ylab='price', width=3/4)
boxplot(pov ~ pop)
boxPlot(pov, pop, xlab='type', ylab='price', width=3/4)
boxplot(pov ~ pop)
cc[1:5,]
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "loss"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#loss <- density(pov[pop == "loss"])#
#
#yR <- c(0, max(c(gain$y, loss$y)))#
#xR <- range(c(gain$x, loss$x))#
xR  <- range(pov)
boxPlot(pov, pop, xlab='type', ylab='price')
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'gain'], col='#ffffff00', border=COL[1], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', outline=TRUE, lty=1, axes=FALSE, lwd=2)#
histPlot(pov[pop == 'no gain'], col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, outline=TRUE, lty=2, lwd=2)#
#
legend('topright', col=COL, lty=1:2, legend=c('gain', 'no gain'), lwd=2)#
dev.off()
?histPlot
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'gain'], col='#ffffff00', border=COL[1], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, lty=1, axes=FALSE, lwd=2)#
histPlot(pov[pop == 'no gain'], col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=2, lwd=2)#
#
legend('topright', col=COL, lty=1:2, legend=c('gain', 'no gain'), lwd=2)#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, lty=1, axes=FALSE, lty=2, lwd=2)#
histPlot(pov[pop == 'gain'], col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lwd=2)#
#
legend('topleft', col=COL, lty=1:2, legend=c('gain', 'no gain'), lwd=2)#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=2, lwd=2)#
histPlot(pov[pop == 'gain'], col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=1:2, legend=c('gain', 'no gain'), lwd=2)#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=2, lwd=2)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=1:2, legend=c('gain', 'no gain'), lwd=2)#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=2)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), legend=c('gain', 'no gain'), lwd=2)#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=2)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=3)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'), lwd=2)#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=2)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=3)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=4, lwd=3)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,4), lwd=c(2,3), legend=c('gain', 'no gain'))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,4), lwd=c(2,3), legend=c('gain', 'no gain'))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
#legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), border=rgb(0,0,0,0))#
dev.off()
?legend
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
#legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
#legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
#legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1,1.5), lwd=c(2,3), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=3)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.5)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.5), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=2.4)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.2)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.5), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=2.5)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1.25)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.5), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,3), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.5), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlim=xR, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=c(0,100))#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$home_ownership#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=c(0,100))#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
cc[1:2,]
boxplot(cc$median_household_income ~ pop)
cc[1:2,]
boxplot(cc$per_capita_income ~ pop)
boxplot(cc$mean_work_travel ~ pop)
boxplot(cc$per_capita_income ~ pop)
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topleft', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topleft', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Home Ownership Rate (%)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Home Ownership Rate (%)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyHomeOwnershipSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
cc[1:2,]
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$per_capita_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(round(M[i,j], 1))#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
M <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(round(as.numeric(M[i,j]), 1))#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17))#
M     <- round(as.numeric(temp, 1)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17))#
M     <- round(as.numeric(temp), 1)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
M     <- round(as.numeric(temp), 1)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
M
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
M     <- as.character(round(as.numeric(temp), 1))#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
M[150]
M[153]
M[152]
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
M     <- as.character(round(as.numeric(temp), 1))#
M[is.na(M)] <- ""#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
dim(M)
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- pov[pop == -1][these]#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- pov[pop == 1][these]#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
M     <- as.character(round(as.numeric(temp), 1))#
M[is.na(M)] <- ""#
DB <- 6
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}
i
nrow(M)
dim(M)
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
temp  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}
M
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
these <- which(pov > 59 & pov < 65 & pop == "no gain")
these
cc[these,1:3]
length(these)
data(email50)
xtable(email50)
library(xtable)
xtable(email50)
email50[1:5,]
email50[c(1,2,50),]
email50[c(1,2,3,50),]
email50[c(1,2,50),]
email50[c(1,2,3,50),]
library(openintro); library(xtable); data(email50); xtable(email50[c(1,2,3,50)),c("spam", "num_char", "lines", "html", "number")], digits=0)
library(openintro); library(xtable); data(email50); xtable(email50[c(1,2,3,50),c("spam", "num_char", "lines", "html", "number")], digits=0)
county[1:2,]
countyComplete[1:2,]
colnames(cc)
library(openintro); county <- countyComplete[,c("name", "state", "pop2000", "pop2010", "fed_spend", "poverty", "home_ownership", "housing_multi_unit", "per_capita_income", "median_household_income")]; colnames(county) <- c("name", "state", "pop2000", "pop2010", "fed_spending", "poverty", "home_ownership", "multiunit", "income", "med_income")
library(openintro); county <- countyComplete[,c("name", "state", "pop2000", "pop2010", "fed_spend", "poverty", "home_ownership", "housing_multi_unit", "per_capita_income", "median_household_income")];
countyComplete[1:2,c("name", "state", "pop2000", "pop2010", "fed_spend", "poverty", "home_ownership", "housing_multi_unit", "per_capita_income", "median_household_income")]
countyComplete[1:2,c("name", "state", "pop2000", "pop2010", "fed_spend", "poverty", "home_ownership")]
countyComplete[1:2,c("name", "state", "pop2000", "pop2010")]
library(openintro); county <- countyComplete[,c("name", "state", "pop2000", "pop2010", "fed_spending", "poverty", "home_ownership", "housing_multi_unit", "per_capita_income", "median_household_income")]; colnames(county) <- c("name", "state", "pop2000", "pop2010", "fed_spend", "poverty", "home_ownership", "multiunit", "income", "med_income")
county[1:2,]
county[1:5,]
county$fed_spend <- county$fed_spend / county$pop2010
county[1:5,]
data(SB)
library(SB)
countyInfo[1:2,]
coInfo[1:2,]
data(coInfo)
coInfo[1:2,]
coInfo[coInfo$state == "AL",][1:2,]
coInfo[coInfo$state == "AL",][1:5,]
county[1:5,]
xtable(county[1:5,])
xtable(county[c(1:5, nrow(county) - (1:0)),])
county[3142+0:1,]
coInfo[coInfo$state == "WY",][1:5,]
dim(coInfo[coInfo$state == "WY",])
coInfo[coInfo$state == "WY",][21:23,]
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)
library(openintro)#
data(countyComplete)#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
COL <- c('#22883377', '#665511FF')#
#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#225588", col="#22558844")#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#225588", col="#22558844")#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#225588", col="#22558844")#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[2], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[2]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#225588", col="#22558844")#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)')#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#225588", col=COL[1])#
boxPlot(pov[pop == "gain"], lcol=COL[4], col=COL[4], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[1], col=COL[1], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#225588", col=COL[1])#
boxPlot(pov[pop == "gain"], lcol=COL[4], col=COL[4,3], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[1], col=COL[1,3], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#00000000", col="#00000000")#
boxPlot(pov[pop == "gain"], lcol=COL[4], col=COL[4,3], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[1], col=COL[1,3], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL, lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), , box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#00000000", col="#00000000")#
boxPlot(pov[pop == "gain"], lcol=COL[4], col=COL[4,3], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[1], col=COL[1,3], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL[c(1,4)], lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#00000000", col="#00000000")#
boxPlot(pov[pop == "gain"], lcol=COL[4], col=COL[1,3], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[1], col=COL[4,3], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL[c(1,4)], lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#00000000", col="#00000000")#
boxPlot(pov[pop == "gain"], lcol=COL[4], col=COL[1,3], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[4], col=COL[1,3], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL[c(1,4)], lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
library(openintro)#
data(countyComplete)#
data(COL)#
#
cc  <- countyComplete#
pop <- sign(cc$pop2010 - cc$pop2000 - 0.5)#
pov <- cc$median_household_income / 1000#
#
set.seed(1)#
these <- sample(sum(pop == -1, na.rm=TRUE), 50)#
sampL <- round(pov[pop == -1][these], 1)#
these <- sample(sum(pop == 1, na.rm=TRUE), 100)#
sampG <- round(pov[pop == 1][these], 1)#
M  <- matrix(c(sampG, rep("", 2), sampL, rep("", 1)), 17)#
DB <- 6#
for(i in 1:nrow(M)){#
  for(j in 1:ncol(M)){#
    cat(M[i,j])#
    if(j == DB)#
      cat(" && ")#
    else if(j == ncol(M))#
      cat(" \\\\")#
    else#
      cat(" & ")#
  }#
  cat("\n")#
}#
pop[pop == 1] <- "gain"#
pop[pop == -1] <- "no gain"#
#gain <- density(pov[pop == "gain"])#
#no gain <- density(pov[pop == "no gain"])#
#
#yR <- c(0, max(c(gain$y, no gain$y)))#
#xR <- range(c(gain$x, no gain$x))#
xR  <- range(pov)#
#
myPDF("countyIncomeSplitByPopGain.pdf", 7.5, 4, mar=c(3.6, 3.6, 1, 0.5), mgp=c(2.4, 0.7, 0), las=1, mfrow=1:2)#
boxPlot(pov, pop, xlab='Change in Population', ylab='Median Income ($1000s)', lcol="#00000000", col="#00000000")#
boxPlot(pov[pop == "gain"], lcol=COL[1], col=COL[1,3], add=1)#
boxPlot(pov[pop == "no gain"], lcol=COL[4], col=COL[4,3], add=2)#
#
par(mar=c(3.6, 0.5, 1, 1), las=1)#
#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, xlab='Median Income ($1000s)', ylab='', hollow=TRUE, axes=FALSE, lty=3, lwd=4, xlim=xR)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=2)#
histPlot(pov[pop == 'no gain'], breaks=50, col='#ffffff00', border=COL[4], probability=TRUE, add=TRUE, hollow=TRUE, lty=3, lwd=1)#
histPlot(pov[pop == 'gain'], breaks=50, col='#ffffff00', border=COL[1], probability=TRUE, add=TRUE, hollow=TRUE, lty=1, lwd=2)#
axis(1)#
legend('topright', col=COL[c(1,4)], lty=c(1,3), lwd=c(2,2.8), legend=c('gain', 'no gain'))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,1.4), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
legend('topright', col=c(rgb(0,0,0,0), COL[4]), lty=c(1, 3), lwd=c(2,0.7), legend=c('gain', 'no gain'), bg=rgb(0,0,0,0), box.col=rgb(0,0,0,0), text.col=rgb(0,0,0,0))#
dev.off()
